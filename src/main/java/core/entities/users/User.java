package core.entities.users;

import core.entities.Entity;
import core.entities.groups.GroupList;
import core.entities.mediatypes.Album;
import core.entities.mediatypes.Artist;
import core.entities.mediatypes.Song;
import easysqlite.annotations.declarations.Column;
import easysqlite.annotations.declarations.Table;
import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.ToString;
import lombok.experimental.FieldDefaults;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.Set;

/**
 * User
 * By Erik Helmers, the 26/05/2018
 */

@ToString
@Getter
@FieldDefaults(level=AccessLevel.PUBLIC)
@Table("users")
public class User extends Entity<User.Id> implements UserDetails {



    public User(){}

    @Builder
    public User(int id,
                String username,
                String name,
                String password,
                String salt,
                MusicProfile.Id musicProfileId,
                UserSettings.Id userSettingsId,
                GroupList.Id groupList,
                Role.Id role) {

        super(new Id(id));
        this.username = username;
        this.name = name;
        this.password = password;
        this.salt = salt;
        this.musicProfile = musicProfileId;
        this.userSettings = userSettingsId;
        this.groupList = groupList;
        this.role = role;

    }




    public static final class Id extends Entity.IntegerId {
        public Id(Integer id) {
            super(id);
        }

    }


    @Column
    String name;
    @Column
    String username;
    @Column
    String password;
    @Column
    String salt;
    @Column
    MusicProfile.Id musicProfile;
    @Column("settings")
    UserSettings.Id userSettings;
    @Column("groups")
    GroupList.Id groupList;
    @Column
    Role.Id role;

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return null;
    }


    //Getters for userDetails inheritance are generated by Lombok
    boolean accountNonExpired = true;
    boolean isCredentialsNonExpired = true;
    boolean isAccountNonLocked = true;
    boolean isEnabled = true;


}
